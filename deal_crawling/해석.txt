퀘니사존 핫딜 시세 확인

어떤 상품을 구매하고 싶을때 역대 핫딜중 가장 낮은 가격은 어떤것이였는지를 확인하려한적이 있었습니다 그리고 보통 저는 퀘이사존 핫딜 게시판을 이용해서 특가를 확인하기에 원하는 키워드를 검색해보고 직접 가격들을 확인해보면서 찾아간적이 있는데 간단한 크롤링 코드를 작성해서 간단하게 원하는 결과를 도출해보았습니다.

먼저 퀘이사존을 그냥 request의 get함수를 이용해서 가져오려면 로봇으로 인식하여 robot.txt 홈페이지만 보여주어 원하는 페이지를 크롤링할수 없습니다.

그래서 이런경우의 한가지 해결방법인 셀레니움을 이용해서 가져오겠습니다

셀레니움은 직접 브라우저를 열어서 페이지를 열고 크롤링을 해오기에 로봇으로 인식되지 않고 결과를 가져올수 있습니다

먼저 셀레니움을 사용하기 위해 컴퓨터에 셀레니움을 설치해야하는데 매번 컴퓨터에 설치하고 준비과정을 없애기 위해 셀레니움을 사용할수 있는 환경을 도커에 구축해보겠습니다
(도커에 셀레니움 설치법)
(아직 모름 나중에 추가) 
(내가 알아내겠지)

다음 파이썬 코드를 작성해보겠습니다
먼저 사용자에게서 검색할 키워드를 받아서 핫딜게시판 주소를 만들어내어 셀레니움에서 그 사이트를 크롤링 하고 원하는 정보를 얻어낸 후 top3나 전체목록으로 출력해보겠습니다

먼저 필요한 라이브러리를 불러오겠습니다
(
from bs4 import BeautifulSoup
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
import re
)

=======코드+주석

def cr_hotdeal(keyword) :
    #가장 먼저 이 함수로 필요한 정보를 내보낼 리스트를 먼저 선언 한후 
    results = []

    #입력받은 키워드를 붙여서 크롤링 할 주소를 만들어 줍니다.
    base_url = "https://quasarzone.com/bbs/qb_saleinfo?_method=post&kind=subject&keyword="
    final_url = f"{base_url}{keyword}"
    #셀레니움을 이용하여 크롤링합니다.
    options = webdriver.ChromeOptions()
    options.add_experimental_option("excludeSwitches",["enable-logging"])
    browser = webdriver.Chrome(options=options)
    browser.get(final_url)

    #BeautifulSoup를 이용하여 정보들을 찾아서 우리가 필요한 정보인 링크와 가격을 가져오고 후에 내보낼 리스트에 추가해줍니다.
    soup = BeautifulSoup(browser.page_source,'html.parser')
    deal_list = soup.find('div', class_="market-type-list market-info-type-list relative")
    deals = deal_list.find_all('div', class_="market-info-list-cont")
    for deal in deals :
        link = deal.select_one("a")['href']
        price0 = deal.find("span",class_="text-orange")
        if price0.string.find("KRW") != -1 :
            price = int(re.sub(r'[^0-9]', '', price0.string))
            if price > 100 :
                deal_data = {
                    'link' : f"https://quasarzone.com{link}".replace(","," "),
                    'price' : price
                }
                results.append(deal_data)
    #결과를 낮은 가격순으로 보고 싶기 때문에 딕셔너리의 키들로 분류합니다.
    result = sorted(results, key = lambda x : (x['price']))
    return result


print("나온 링크를 클릭해서 최근에 나온 가장 싼 특가를 확인하세요.")
print("100원 이하의 이벤트 상품은 제외했습니다.")
keyword = input("퀘이사존 특가 페이지에서 검색하고 싶은 아이템을 입력해주세요. : ")
result = cr_hotdeal(keyword)
while(True) :
    if len(result) < 3 :
        print("검색된 링크가 너무 적습니다.")
        break
    mode = input(f"{keyword}의 TOP3 링크만 출력하려면 숫자 1, 전체를 출력하려면 숫자 2를 입력해주세요. : ")
    if mode == "1" :
        print("=====")
        print(f"TOP1 = 가격 : {result[0]['price']} / 링크 : {result[0]['link']}")
        print(f"TOP2 = 가격 : {result[1]['price']} / 링크 : {result[1]['link']}")
        print(f"TOP3 = 가격 : {result[2]['price']} / 링크 : {result[2]['link']}")
        print("=====")
        break

    elif mode == "2" :
        print("=====")
        for i in range(len(result)) :
            print(f"{i+1}등 = 가격 : {result[i]['price']} / 링크 : {result[i]['link']}")
        print("=====")
        break

    else :
        print("제대로 입력해주세요")
 
